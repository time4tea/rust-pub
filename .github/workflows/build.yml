name: Build Binaries

on:
  workflow_call:
    inputs:
      release:
        type: boolean
        default: false
      tag:
        type: string
        required: false

env:
  CARGO_TERM_COLOR: always


jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.target }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies
        if: matrix.target == 'x86_64-unknown-linux-musl' || matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools gcc-aarch64-linux-gnu

      - name: Configure linker
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary as tar.gz
        run: |
          bin_name=flutter-pub
          archive=${bin_name}-${{ matrix.target }}.tar.gz
          mkdir -p dist/$bin_name-${{ matrix.target }}
          cp target/${{ matrix.target }}/release/$bin_name dist/$bin_name-${{ matrix.target }}/
          tar -czf dist/$archive -C dist $bin_name-${{ matrix.target }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*.tar.gz
